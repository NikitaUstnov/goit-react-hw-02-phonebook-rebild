{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/App.module.css","components/Title/Title.module.css","components/Alert/Alert.module.css","components/ContactList/ContactList.js","components/Filter/Filter.js","components/ContactForm/ContactForm.js","components/Title/Title.jsx","components/Alert/Alert.jsx","components/App.js","index.js","components/ContactList/ContactList.module.css"],"names":["module","exports","ContactList","contacts","onRemoveContact","TransitionGroup","component","className","styles","TaskList","map","contact","CSSTransition","timeout","classNames","TaskList_item","key","id","name","number","TaskList_button","type","onClick","Filter","value","onChangeFilter","onChange","e","target","ContactForm","state","handleChange","setState","handleSubmit","preventDefault","props","onAddContact","TaskEditor","onSubmit","this","TaskEditor_label","TaskEditor_input","TaskEditor_button","Component","Title","title","in","appear","Alert","App","filter","error","addContact","task","cont","includes","setTimeout","prevStete","uuidv4","prevState","changeFilter","getVisibleContacts","toLowerCase","removeContact","contactId","localStorage","getItem","parsedContacts","JSON","parse","prevProps","setItem","stringify","visibleContacts","length","unmountOnExit","ReactDOM","render","document","getElementById"],"mappings":"iIACAA,EAAOC,QAAU,CAAC,WAAa,gCAAgC,iBAAmB,sCAAsC,iBAAmB,sCAAsC,gBAAkB,qCAAqC,kBAAoB,yC,mBCA5PD,EAAOC,QAAU,CAAC,MAAQ,mBAAmB,YAAc,yBAAyB,KAAO,kBAAkB,WAAa,0B,mBCA1HD,EAAOC,QAAU,CAAC,OAAS,sBAAsB,aAAe,4BAA4B,MAAQ,uB,mBCApGD,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,OAAS,sBAAsB,aAAe,8B,sNCoC9EC,EAhCK,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,gBAAb,OAClB,kBAACC,EAAA,EAAD,CAAiBC,UAAU,KAAKC,UAAWC,IAAOC,UAC/CN,EAASO,KAAI,SAACC,GAAD,OACZ,kBAACC,EAAA,EAAD,CAAeC,QAAS,IAAKC,WAAYN,KACvC,wBAAID,UAAWC,IAAOO,cAAeC,IAAKL,EAAQM,IAC/CN,EAAQO,KAAO,IAAMP,EAAQQ,OAE5B,4BACEZ,UAAWC,IAAOY,gBAClBC,KAAK,SACLH,KAAK,QACLI,QAAS,kBAAMlB,EAAgBO,EAAQM,MAJzC,iBCTG,SAASM,EAAT,GAA4C,IAA1BC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,eACtC,OACE,qDAEE,2BACEJ,KAAK,OACLG,MAAOA,EACPE,SAAU,SAACC,GAAD,OAAOF,EAAeE,EAAEC,OAAOJ,W,2BCN5BK,E,4MACnBC,MAAQ,CACNZ,KAAM,GACNC,OAAQ,I,EAGVY,aAAe,SAACJ,GAAO,IAAD,EACIA,EAAEC,OAAlBV,EADY,EACZA,KAAMM,EADM,EACNA,MACd,EAAKQ,SAAL,eACGd,EAAOM,K,EAIZS,aAAe,SAACN,GACdA,EAAEO,iBAEF,EAAKC,MAAMC,aAAX,eAA6B,EAAKN,QAElC,EAAKE,SAAS,CAAEd,KAAM,GAAIC,OAAQ,M,uDAGlC,OACE,0BAAMZ,UAAWC,IAAO6B,WAAYC,SAAUC,KAAKN,cACjD,2BAAO1B,UAAWC,IAAOgC,kBAAzB,OAEE,2BACEjC,UAAWC,IAAOiC,iBAClBpB,KAAK,OACLH,KAAK,OACLM,MAAOe,KAAKT,MAAMZ,KAClBQ,SAAUa,KAAKR,gBAGnB,2BAAOxB,UAAWC,IAAOgC,kBAAzB,SAEE,2BACEjC,UAAWC,IAAOiC,iBAClBpB,KAAK,OACLH,KAAK,SACLM,MAAOe,KAAKT,MAAMX,OAClBO,SAAUa,KAAKR,gBAGnB,4BAAQxB,UAAWC,IAAOkC,kBAAmBrB,KAAK,UAAlD,oB,GA3CiCsB,a,iBCa1BC,EAZD,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACf,OACE,kBAACjC,EAAA,EAAD,CAAekC,IAAI,EAAMC,QAAQ,EAAMlC,QAAS,IAAKC,WAAYN,KAC/D,wBAAID,UAAWC,IAAOqC,OAAQA,K,iBCWrBG,EAdD,SAAC,GAAe,IAAbH,EAAY,EAAZA,MACf,OACE,kBAACjC,EAAA,EAAD,CAAekC,IAAI,EAAMC,QAAQ,EAAMlC,QAAS,IAAKC,WAAYN,KAC/D,yBAAKD,UAAWC,IAAOwC,OACrB,8BAAOH,MCCMI,E,4MACnBnB,MAAQ,CACN3B,SAAU,GACV+C,OAAQ,GACRC,OAAO,G,EAGTC,WAAa,SAACC,GAKZ,GAJuB,EAAKvB,MAAM3B,SAC/BO,KAAI,SAAC4C,GAAD,OAAUA,EAAKpC,QACnBqC,SAASF,EAAKnC,MAGf,EAAKc,UAAS,iBAAO,CACnBmB,OAAO,MAGTK,YACE,kBACE,EAAKxB,UAAS,SAACyB,GAAD,MAAgB,CAC5BN,MAAQ,EAAKrB,MAAMqB,OAASM,QAEhC,SAMC,CACH,IAAM9C,EAAO,2BACR0C,GADQ,IAEXpC,GAAIyC,gBAGN,EAAK1B,UAAS,SAAC2B,GAAD,MAAgB,CAC5BxD,SAAS,GAAD,mBAAMwD,EAAUxD,UAAhB,CAA0BQ,U,EAKxCiD,aAAe,SAACV,GACd,EAAKlB,SAAS,CAAEkB,Y,EAGlBW,mBAAqB,WAAO,IAAD,EACI,EAAK/B,MAA1B3B,EADiB,EACjBA,SAAU+C,EADO,EACPA,OAElB,OAAO/C,EAAS+C,QAAO,SAAC/C,GAAD,OACrBA,EAASe,KAAK4C,cAAcP,SAASL,EAAOY,mB,EAIhDC,cAAgB,SAACC,GACf,EAAKhC,UAAS,SAAC2B,GACb,MAAO,CACLxD,SAAUwD,EAAUxD,SAAS+C,QAAO,qBAAGjC,KAAgB+C,U,kEAM3D,IAAM7D,EAAW8D,aAAaC,QAAQ,YAChCC,EAAiBC,KAAKC,MAAMlE,GAE9BgE,GACF5B,KAAKP,SAAS,CAAE7B,SAAUgE,M,yCAIXG,EAAWX,GACxBpB,KAAKT,MAAM3B,WAAawD,EAAUxD,UACpC8D,aAAaM,QAAQ,WAAYH,KAAKI,UAAUjC,KAAKT,MAAM3B,a,+BAIrD,IAAD,EAC6BoC,KAAKT,MAAjCoB,EADD,EACCA,OAAQ/C,EADT,EACSA,SAAUgD,EADnB,EACmBA,MACpBsB,EAAkBlC,KAAKsB,qBAE7B,OACE,6BACGV,EAAQ,kBAAC,EAAD,CAAON,MAAM,kBAAqB,qCAE3C,kBAAC,EAAD,CAAOA,MAAM,cAEb,kBAAC,EAAD,CAAaT,aAAcG,KAAKa,aAChC,wCACA,kBAACxC,EAAA,EAAD,CACEkC,GAAI3C,EAASuE,QAAU,EACvB5D,WAAYN,IACZK,QAAS,IACT8D,eAAa,GAEb,kBAACpD,EAAD,CAAQC,MAAO0B,EAAQzB,eAAgBc,KAAKqB,gBAE9C,kBAAChD,EAAA,EAAD,CACEkC,GAAI2B,EAAgBC,OAAS,EAC7B5D,WAAYN,IACZK,QAAS,IACT8D,eAAa,GAEb,kBAAC,EAAD,CACExE,SAAUsE,EACVrE,gBAAiBmC,KAAKwB,sB,GAvGDpB,aCNjCiC,IAASC,OACP,oCACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U,kBCP1B/E,EAAOC,QAAU,CAAC,SAAW,8BAA8B,cAAgB,mCAAmC,UAAY,+BAA+B,cAAgB,mCAAmC,iBAAmB,sCAAsC,gBAAkB,qCAAqC,MAAQ,2BAA2B,YAAc,iCAAiC,KAAO,0BAA0B,WAAa,mC","file":"static/js/main.6e4876ed.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"TaskEditor\":\"ContactForm_TaskEditor__10rnC\",\"TaskEditor_label\":\"ContactForm_TaskEditor_label__1t0fv\",\"TaskEditor_input\":\"ContactForm_TaskEditor_input__52LHj\",\"TaskEditorinput\":\"ContactForm_TaskEditorinput__EfB1U\",\"TaskEditor_button\":\"ContactForm_TaskEditor_button__mD4zU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"App_enter__3CZNT\",\"enterActive\":\"App_enterActive__3UQ4M\",\"exit\":\"App_exit__3masX\",\"exitActive\":\"App_exitActive__3OxjE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appear\":\"Title_appear__tCrE2\",\"appearActive\":\"Title_appearActive__2RHrh\",\"title\":\"Title_title__3z29e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Alert\":\"Alert_Alert__3Yxo_\",\"appear\":\"Alert_appear__z5t8l\",\"appearActive\":\"Alert_appearActive__2OpVf\"};","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\nimport styles from \"./ContactList.module.css\";\n\nconst ContactList = ({ contacts, onRemoveContact }) => (\n  <TransitionGroup component=\"ul\" className={styles.TaskList}>\n    {contacts.map((contact) => (\n      <CSSTransition timeout={200} classNames={styles}>\n        <li className={styles.TaskList_item} key={contact.id}>\n          {contact.name + \":\" + contact.number}\n          {\n            <button\n              className={styles.TaskList_button}\n              type=\"button\"\n              name=\"delte\"\n              onClick={() => onRemoveContact(contact.id)}\n            >\n              delete\n            </button>\n          }\n        </li>\n      </CSSTransition>\n    ))}\n  </TransitionGroup>\n);\n\nContactList.propTypes = {\n  onRemoveContact: PropTypes.func.isRequired,\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\nexport default ContactList;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport default function Filter({ value, onChangeFilter }) {\n  return (\n    <div>\n      Find contacts by name\n      <input\n        type=\"text\"\n        value={value}\n        onChange={(e) => onChangeFilter(e.target.value)}\n      />\n    </div>\n  );\n}\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onchangeFilter: PropTypes.func,\n};\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./ContactForm.module.css\";\n\nexport default class ContactForm extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  handleChange = (e) => {\n    const { name, value } = e.target;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    this.props.onAddContact({ ...this.state });\n\n    this.setState({ name: \"\", number: \"\" });\n  };\n  render() {\n    return (\n      <form className={styles.TaskEditor} onSubmit={this.handleSubmit}>\n        <label className={styles.TaskEditor_label}>\n          Name\n          <input\n            className={styles.TaskEditor_input}\n            type=\"text\"\n            name=\"name\"\n            value={this.state.name}\n            onChange={this.handleChange}\n          />\n        </label>\n        <label className={styles.TaskEditor_label}>\n          Number\n          <input\n            className={styles.TaskEditor_input}\n            type=\"text\"\n            name=\"number\"\n            value={this.state.number}\n            onChange={this.handleChange}\n          />\n        </label>\n        <button className={styles.TaskEditor_button} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nContactForm.propTypes = {\n  onAddContact: PropTypes.func,\n  name: PropTypes.string,\n  number: PropTypes.string,\n};\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport styles from \"./Title.module.css\";\r\n\r\nconst Title = ({ title }) => {\r\n  return (\r\n    <CSSTransition in={true} appear={true} timeout={500} classNames={styles}>\r\n      <h1 className={styles.title}>{title}</h1>\r\n    </CSSTransition>\r\n  );\r\n};\r\n\r\nTitle.propTypes = {\r\n  title: PropTypes.string,\r\n};\r\n\r\nexport default Title;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\nimport styles from \"./Alert.module.css\";\r\n\r\nconst Alert = ({ title }) => {\r\n  return (\r\n    <CSSTransition in={true} appear={true} timeout={250} classNames={styles}>\r\n      <div className={styles.Alert}>\r\n        <span>{title}</span>\r\n      </div>\r\n    </CSSTransition>\r\n  );\r\n};\r\n\r\nAlert.propTypes = {\r\n  title: PropTypes.string,\r\n};\r\n\r\nexport default Alert;\r\n","import React, { Component } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport styles from \"./App.module.css\";\nimport ContactList from \"./ContactList/ContactList\";\nimport Filter from \"./Filter/Filter\";\nimport ContactForm from \"./ContactForm/ContactForm\";\nimport { SwitchTransition, CSSTransition } from \"react-transition-group\";\nimport Title from \"./Title/Title\";\nimport Alert from \"./Alert/Alert\";\n\nexport default class App extends Component {\n  state = {\n    contacts: [],\n    filter: \"\",\n    error: false,\n  };\n\n  addContact = (task) => {\n    const searchSameName = this.state.contacts\n      .map((cont) => cont.name)\n      .includes(task.name);\n\n    if (searchSameName) {\n      this.setState(() => ({\n        error: true,\n      }));\n\n      setTimeout(\n        () =>\n          this.setState((prevStete) => ({\n            error: (this.state.error = !prevStete),\n          })),\n        500\n      );\n    }\n    // else if (task.name.length === 0) {\n    //   alert(\"Fields must be filled!\");\n    // }\n    else {\n      const contact = {\n        ...task,\n        id: uuidv4(),\n      };\n\n      this.setState((prevState) => ({\n        contacts: [...prevState.contacts, contact],\n      }));\n    }\n  };\n\n  changeFilter = (filter) => {\n    this.setState({ filter });\n  };\n\n  getVisibleContacts = () => {\n    const { contacts, filter } = this.state;\n\n    return contacts.filter((contacts) =>\n      contacts.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  removeContact = (contactId) => {\n    this.setState((prevState) => {\n      return {\n        contacts: prevState.contacts.filter(({ id }) => id !== contactId),\n      };\n    });\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem(\"contacts\");\n    const parsedContacts = JSON.parse(contacts);\n\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n    }\n  }\n\n  render() {\n    const { filter, contacts, error } = this.state;\n    const visibleContacts = this.getVisibleContacts();\n\n    return (\n      <div>\n        {error ? <Alert title=\"Already exist\" /> : <></>}\n\n        <Title title=\"Phonebook\" />\n\n        <ContactForm onAddContact={this.addContact} />\n        <h2>Contacts</h2>\n        <CSSTransition\n          in={contacts.length >= 1}\n          classNames={styles}\n          timeout={250}\n          unmountOnExit\n        >\n          <Filter value={filter} onChangeFilter={this.changeFilter} />\n        </CSSTransition>\n        <CSSTransition\n          in={visibleContacts.length > 0}\n          classNames={styles}\n          timeout={250}\n          unmountOnExit\n        >\n          <ContactList\n            contacts={visibleContacts}\n            onRemoveContact={this.removeContact}\n          />\n        </CSSTransition>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <>\n    <App />\n  </>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TaskList\":\"ContactList_TaskList__NlSZK\",\"TaskList_item\":\"ContactList_TaskList_item__Q_TUW\",\"completed\":\"ContactList_completed__2rJ7O\",\"TaskList_text\":\"ContactList_TaskList_text__2J5B8\",\"TaskList_actions\":\"ContactList_TaskList_actions__3Fi2-\",\"TaskList_button\":\"ContactList_TaskList_button__27snd\",\"enter\":\"ContactList_enter__1prCT\",\"enterActive\":\"ContactList_enterActive__wig1C\",\"exit\":\"ContactList_exit__1DIs_\",\"exitActive\":\"ContactList_exitActive__302Ks\"};"],"sourceRoot":""}